@mod2(a: int): bool {            # defs: a_DEF1, 
.mod2_bb0:
  a.1: int = id a;               # defs: a.1_DEF1, uses: USE1,     # reaching defs: a_DEF1, 
  a.2: int = id a.1;             # defs: a.2_DEF1, uses: USE2,     # reaching defs: a_DEF1, a.1_DEF1, 
  two.1: int = const 2;          # defs: two.1_DEF1, 
  tmp.1: int = div a.2 two.1;    # defs: tmp.1_DEF1, uses: USE3,   # reaching defs: a_DEF1, a.1_DEF1, a.2_DEF1, two.1_DEF1, 
  tmp2.1: int = mul tmp.1 two.1; # defs: tmp2.1_DEF1, uses: USE4,  # reaching defs: a_DEF1, a.1_DEF1, a.2_DEF1, two.1_DEF1, tmp.1_DEF1, 
  tmp3.1: int = sub a.2 tmp2.1;  # defs: tmp3.1_DEF1, uses: USE5,  # reaching defs: a_DEF1, a.1_DEF1, a.2_DEF1, two.1_DEF1, tmp.1_DEF1, tmp2.1_DEF1, 
  one.1: int = const 1;          # defs: one.1_DEF1, 
  ans.1: bool = eq one.1 tmp3.1; # defs: ans.1_DEF1, uses: USE6,   # reaching defs: a_DEF1, a.1_DEF1, a.2_DEF1, two.1_DEF1, tmp.1_DEF1, tmp2.1_DEF1, tmp3.1_DEF1, one.1_DEF1, 
  ret ans.1;                     # uses: USE7,                     # reaching defs: a_DEF1, a.1_DEF1, a.2_DEF1, two.1_DEF1, tmp.1_DEF1, tmp2.1_DEF1, tmp3.1_DEF1, one.1_DEF1, ans.1_DEF1, 
}
@main(a: int, b: int, c: bool): int {                   # defs: a_DEF1, b_DEF1, c_DEF1, 
.main_bb0:
  c.1: bool = id c;                                     # defs: c.1_DEF1, uses: USE1,          # reaching defs: c_DEF1, b_DEF1, a_DEF1, 
  b.1: int = id b;                                      # defs: b.1_DEF1, uses: USE2,          # reaching defs: c_DEF1, b_DEF1, a_DEF1, c.1_DEF1, 
  a.1: int = id a;                                      # defs: a.1_DEF1, uses: USE3,          # reaching defs: c_DEF1, b_DEF1, a_DEF1, c.1_DEF1, b.1_DEF1, 
  c.2: bool = id c.1;                                   # defs: c.2_DEF1, uses: USE4,          # reaching defs: c_DEF1, b_DEF1, a_DEF1, c.1_DEF1, b.1_DEF1, a.1_DEF1, 
  b.2: int = id b.1;                                    # defs: b.2_DEF1, uses: USE5,          # reaching defs: c_DEF1, b_DEF1, a_DEF1, c.1_DEF1, b.1_DEF1, a.1_DEF1, c.2_DEF1, 
  a.2: int = id a.1;                                    # defs: a.2_DEF1, uses: USE6,          # reaching defs: c_DEF1, b_DEF1, a_DEF1, c.1_DEF1, b.1_DEF1, a.1_DEF1, c.2_DEF1, b.2_DEF1, 
  i.1: int = const 0;                                   # defs: i.1_DEF1, 
  n.1: int = const 63;                                  # defs: n.1_DEF1, 
  one.1: int = const 1;                                 # defs: one.1_DEF1, 
  two.1: int = const 2;                                 # defs: two.1_DEF1, 
  ans.1: int = const 0;                                 # defs: ans.1_DEF1, 
  to_add.1: int = const 1;                              # defs: to_add.1_DEF1, 
.loop:
  ans.2 = phi ans.4 .end_loop ans.1 .main_bb0;          # defs: ans.2_DEF1, uses: USE7,        # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, 
  b.3 = phi b.4 .end_loop b.2 .main_bb0;                # defs: b.3_DEF1, uses: USE8,          # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, ans.2_DEF1, 
  a.3 = phi a.4 .end_loop a.2 .main_bb0;                # defs: a.3_DEF1, uses: USE9,          # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, ans.2_DEF1, b.3_DEF1, 
  to_add.2 = phi to_add.3 .end_loop to_add.1 .main_bb0; # defs: to_add.2_DEF1, uses: USE10,    # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, ans.2_DEF1, b.3_DEF1, a.3_DEF1, 
  i.2 = phi i.3 .end_loop i.1 .main_bb0;                # defs: i.2_DEF1, uses: USE11,         # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond.1_DEF1, i.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, ans.2_DEF1, b.3_DEF1, a.3_DEF1, to_add.2_DEF1, 
  cond.1: bool = le i.2 n.1;                            # defs: cond.1_DEF1, uses: USE12,      # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond.1_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, ans.2_DEF1, b.3_DEF1, a.3_DEF1, to_add.2_DEF1, i.2_DEF1, 
  br cond.1 .here .end;                                 # uses: USE13,                         # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, ans.2_DEF1, b.3_DEF1, a.3_DEF1, to_add.2_DEF1, i.2_DEF1, cond.1_DEF1, 
.here:
  mod2a.2: bool = call @mod2 a.3;                       # defs: mod2a.2_DEF1, uses: USE14,     # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, 
  mod2b.2: bool = call @mod2 b.3;                       # defs: mod2b.2_DEF1, uses: USE15,     # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, mod2a.2_DEF1, 
  cond_add.2: bool = and mod2a.2 mod2b.2;               # defs: cond_add.2_DEF1, uses: USE16,  # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond_add.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, mod2a.2_DEF1, mod2b.2_DEF1, 
  br c.2 .doOr .stay;                                   # uses: USE17,                         # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, mod2a.2_DEF1, mod2b.2_DEF1, cond_add.2_DEF1, 
.doOr:
  cond_add.3: bool = or mod2a.2 mod2b.2;                # defs: cond_add.3_DEF1, uses: USE18,  # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, 
.stay:
  cond_add.4 = phi cond_add.3 .doOr cond_add.2 .here;   # defs: cond_add.4_DEF1, uses: USE19,  # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, 
  br cond_add.4 .add .end_loop;                         # uses: USE20,                         # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, 
.add:
  ans.3: int = add ans.2 to_add.2;                      # defs: ans.3_DEF1, uses: USE21,       # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, 
.end_loop:
  ans.4 = phi ans.3 .add;                               # defs: ans.4_DEF1, uses: USE22,       # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, 
  a.4: int = div a.3 two.1;                             # defs: a.4_DEF1, uses: USE23,         # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, ans.4_DEF1, 
  b.4: int = div b.3 two.1;                             # defs: b.4_DEF1, uses: USE24,         # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, ans.4_DEF1, a.4_DEF1, 
  to_add.3: int = mul to_add.2 two.1;                   # defs: to_add.3_DEF1, uses: USE25,    # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, i.3_DEF1, to_add.3_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, ans.4_DEF1, a.4_DEF1, b.4_DEF1, 
  i.3: int = add i.2 one.1;                             # defs: i.3_DEF1, uses: USE26,         # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, i.3_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, ans.4_DEF1, a.4_DEF1, b.4_DEF1, to_add.3_DEF1, 
  jmp .loop;
.end:
  print ans.2;                                          # uses: USE27,                         # reaching defs: c_DEF1, b_DEF1, a_DEF1, to_add.1_DEF1, ans.1_DEF1, two.1_DEF1, one.1_DEF1, n.1_DEF1, i.1_DEF1, a.2_DEF1, b.2_DEF1, c.2_DEF1, a.1_DEF1, b.1_DEF1, c.1_DEF1, cond_add.3_DEF1, ans.3_DEF1, cond_add.2_DEF1, mod2b.2_DEF1, mod2a.2_DEF1, cond_add.4_DEF1, i.3_DEF1, to_add.3_DEF1, b.4_DEF1, a.4_DEF1, ans.4_DEF1, cond.1_DEF1, i.2_DEF1, to_add.2_DEF1, a.3_DEF1, b.3_DEF1, ans.2_DEF1, 
}
