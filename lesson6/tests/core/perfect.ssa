@main(input: int) {
.ENTRY:
.main_bb0:
  n.1: int = id input;
  v0.1: int = const 0;
  v1.1: int = const 1;
  v2.1: int = const 2;
  sum.1: int = id v1.1;
  i.1: int = id v2.1;
  result.1: int = id v1.1;
.for.cond.1:
  comp1.1 = phi comp1.NOT_DEFINED .main_bb0 comp1.2 .for.incre;
  dif.1 = phi dif.NOT_DEFINED .main_bb0 dif.2 .for.incre;
  mpt.1 = phi mpt.NOT_DEFINED .main_bb0 mpt.2 .for.incre;
  i.2 = phi i.1 .main_bb0 i.3 .for.incre;
  sum.2 = phi sum.1 .main_bb0 sum.5 .for.incre;
  qut.1 = phi qut.NOT_DEFINED .main_bb0 qut.2 .for.incre;
  ii.1: int = mul i.2 i.2;
  comp.1: bool = gt ii.1 n.1;
  br comp.1 .for.end .for.body;
.for.body:
  qut.2: int = div n.1 i.2;
  mpt.2: int = mul qut.2 i.2;
  dif.2: int = sub n.1 mpt.2;
  comp1.2: bool = eq dif.2 v0.1;
  br comp1.2 .if.body .for.incre;
.if.body:
  sum.3: int = add sum.2 i.2;
  sum.4: int = add sum.3 qut.2;
.for.incre:
  sum.5 = phi sum.2 .for.body sum.4 .if.body;
  i.3: int = add i.2 v1.1;
  jmp .for.cond.1;
.for.end:
  comp2.1: bool = eq sum.2 n.1;
  br comp2.1 .if.success .if.failure.end;
.if.success:
  result.2: int = id v0.1;
.if.failure.end:
  result.3 = phi result.1 .for.end result.2 .if.success;
  print result.3;
}

