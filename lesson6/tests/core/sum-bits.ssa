@main(input: int) {
.main_bb0:
  input.1: int = id input;
  sum.1: int = const 0;
  two.1: int = const 2;
  zero.1: int = const 0;
.loop:
  bit.1 = phi bit.2 .body;
  input.2 = phi input.1 .main_bb0 input.3 .body;
  sum.2 = phi sum.1 .main_bb0 sum.3 .body;
  cond.1: bool = eq input.2 zero.1;
  br cond.1 .done .body;
.body:
  bit.2: int = call @mod input.2 two.1;
  input.3: int = div input.2 two.1;
  sum.3: int = add sum.2 bit.2;
  jmp .loop;
.done:
  print sum.2;
  ret;
}

@mod(dividend: int, divisor: int): int {
.mod_bb0:
  divisor.1: int = id divisor;
  dividend.1: int = id dividend;
  quotient.1: int = div dividend.1 divisor.1;
  two.1: int = const 2;
  prod.1: int = mul two.1 quotient.1;
  diff.1: int = sub dividend.1 prod.1;
  ret diff.1;
}

