@main {
.ENTRY:
.ENTRY:
.main_bb0:
  v0.1: int = const 20;
  a.1: int = id v0.1;
  v1.1: int = id a.1;
  call @relative_primes v1.1;
  v2.1: int = const 0;
}

@mod(a: int, b: int): int {
.ENTRY:
.ENTRY:
.mod_bb0:
  v0.1: int = id a;
  v1.1: int = id b;
  v2.1: int = div v0.1 v1.1;
  v3.1: int = mul v2.1 v1.1;
  v4.1: int = sub v0.1 v3.1;
  ret v4.1;
}

@gcd(a: int, b: int): int {
.ENTRY:
.ENTRY:
.gcd_bb0:
  v1.1: int = id b;
  v2.1: int = id a;
  v3.1: bool = gt v1.1 v2.1;
  br v3.1 .then.0 .else.0;
.then.0:
  v4.1: int = id a;
  tmp.1: int = id v4.1;
  v5.1: int = id b;
  a.1: int = id v5.1;
  v6.1: int = id tmp.1;
  b.1: int = id v6.1;
  v5.2 = id v5.1;
  a.2 = id a.1;
  v6.2 = id v6.1;
  v4.2 = id v4.1;
  tmp.2 = id tmp.1;
  b.2 = id b.1;
  jmp .endif.0;
.else.0:
  a.2 = id a;
  b.2 = id b;
.endif.0:
  v8.1: int = id a.2;
  v9.1: int = const 0;
  v10.1: bool = eq v8.1 v9.1;
  br v10.1 .then.7 .else.7;
.then.7:
  v11.1: int = id b.2;
  ret v11.1;
  v11.2 = id v11.1;
  jmp .endif.7;
.else.7:
  v13.2: int = id b.2;
  v14.2: int = const 0;
  v15.2: bool = eq v13.2 v14.2;
  br v15.2 .then.12 .else.12;
.then.12:
  v16.2: int = id a.2;
  ret v16.2;
  v16.3 = id v16.2;
  jmp .endif.12;
.else.12:
.endif.12:
  v15.1 = id v15.2;
  v13.1 = id v13.2;
  v14.1 = id v14.2;
.endif.7:
  v17.1: int = id a.2;
  v18.1: int = id b.2;
  remainder.1: int = call @mod v17.1 v18.1;
  remainder.2: int = id remainder.1;
  v19.1: int = id b.2;
  v20.1: int = id remainder.2;
  g.1: int = call @gcd v19.1 v20.1;
  g.2: int = id g.1;
  v21.1: int = id g.2;
  ret v21.1;
}

@relative_primes(a: int) {
.ENTRY:
.ENTRY:
.relative_primes_bb0:
  v1.1: int = id a;
  b.1: int = id v1.1;
  b.2 = id b.1;
.for.cond.0:
  v2.1: int = id b.2;
  v3.1: int = const 1;
  v4.1: bool = ge v2.1 v3.1;
  br v4.1 .for.body.0 .for.end.0;
.for.body.0:
  v5.2: int = id a;
  v6.2: int = id b.2;
  g.2: int = call @gcd v5.2 v6.2;
  g.3: int = id g.2;
  v8.2: int = id g.3;
  v9.2: int = const 1;
  v10.2: bool = eq v8.2 v9.2;
  br v10.2 .then.7 .else.7;
.then.7:
  v11.2: int = id b.2;
  print v11.2;
  v12.2: int = const 0;
  v12.3 = id v12.2;
  v11.3 = id v11.2;
  jmp .endif.7;
.else.7:
.endif.7:
  v13.2: int = id b.2;
  v14.2: int = const 1;
  v15.2: int = sub v13.2 v14.2;
  b.3: int = id v15.2;
  v10.1 = id v10.2;
  v9.1 = id v9.2;
  v13.1 = id v13.2;
  v5.1 = id v5.2;
  b.2 = id b.3;
  g.1 = id g.3;
  v15.1 = id v15.2;
  v8.1 = id v8.2;
  v6.1 = id v6.2;
  v14.1 = id v14.2;
  jmp .for.cond.0;
.for.end.0:
}

