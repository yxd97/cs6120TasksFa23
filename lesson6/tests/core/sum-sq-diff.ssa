@sumOfSquares(n: int): int {
.ENTRY:
.sumOfSquares_bb0:
  v0.1: int = const 0;
  res.1: int = id v0.1;
  v2.1: int = const 1;
  i.1: int = id v2.1;
.for.cond.1:
  v14.1 = phi v14.NOT_DEFINED .sumOfSquares_bb0 v14.2 .for.body.1;
  v8.1 = phi v8.NOT_DEFINED .sumOfSquares_bb0 v8.2 .for.body.1;
  v6.1 = phi v6.NOT_DEFINED .sumOfSquares_bb0 v6.2 .for.body.1;
  i.2 = phi i.1 .sumOfSquares_bb0 i.3 .for.body.1;
  sq.1 = phi sq.NOT_DEFINED .sumOfSquares_bb0 sq.2 .for.body.1;
  v13.1 = phi v13.NOT_DEFINED .sumOfSquares_bb0 v13.2 .for.body.1;
  res.2 = phi res.1 .sumOfSquares_bb0 res.3 .for.body.1;
  v11.1 = phi v11.NOT_DEFINED .sumOfSquares_bb0 v11.2 .for.body.1;
  v7.1 = phi v7.NOT_DEFINED .sumOfSquares_bb0 v7.2 .for.body.1;
  v9.1 = phi v9.NOT_DEFINED .sumOfSquares_bb0 v9.2 .for.body.1;
  v12.1 = phi v12.NOT_DEFINED .sumOfSquares_bb0 v12.2 .for.body.1;
  v10.1 = phi v10.NOT_DEFINED .sumOfSquares_bb0 v10.2 .for.body.1;
  v3.1: int = id i.2;
  v4.1: int = id n;
  v5.1: bool = le v3.1 v4.1;
  br v5.1 .for.body.1 .for.end.1;
.for.body.1:
  v6.2: int = id i.2;
  v7.2: int = id i.2;
  v8.2: int = mul v6.2 v7.2;
  sq.2: int = id v8.2;
  v9.2: int = id res.2;
  v10.2: int = id sq.2;
  v11.2: int = add v9.2 v10.2;
  res.3: int = id v11.2;
  v12.2: int = id i.2;
  v13.2: int = const 1;
  v14.2: int = add v12.2 v13.2;
  i.3: int = id v14.2;
  jmp .for.cond.1;
.for.end.1:
  v15.1: int = id res.2;
  ret v15.1;
}

@squareOfSum(n: int): int {
.ENTRY:
.squareOfSum_bb0:
  v0.1: int = const 0;
  res.1: int = id v0.1;
  v2.1: int = const 1;
  i.1: int = id v2.1;
.for.cond.1:
  v8.1 = phi v8.NOT_DEFINED .squareOfSum_bb0 v8.2 .for.body.1;
  v6.1 = phi v6.NOT_DEFINED .squareOfSum_bb0 v6.2 .for.body.1;
  i.2 = phi i.1 .squareOfSum_bb0 i.3 .for.body.1;
  res.2 = phi res.1 .squareOfSum_bb0 res.3 .for.body.1;
  v11.1 = phi v11.NOT_DEFINED .squareOfSum_bb0 v11.2 .for.body.1;
  v7.1 = phi v7.NOT_DEFINED .squareOfSum_bb0 v7.2 .for.body.1;
  v9.1 = phi v9.NOT_DEFINED .squareOfSum_bb0 v9.2 .for.body.1;
  v10.1 = phi v10.NOT_DEFINED .squareOfSum_bb0 v10.2 .for.body.1;
  v3.1: int = id i.2;
  v4.1: int = id n;
  v5.1: bool = le v3.1 v4.1;
  br v5.1 .for.body.1 .for.end.1;
.for.body.1:
  v6.2: int = id res.2;
  v7.2: int = id i.2;
  v8.2: int = add v6.2 v7.2;
  res.3: int = id v8.2;
  v9.2: int = id i.2;
  v10.2: int = const 1;
  v11.2: int = add v9.2 v10.2;
  i.3: int = id v11.2;
  jmp .for.cond.1;
.for.end.1:
  v12.1: int = id res.2;
  v13.1: int = id res.2;
  v14.1: int = mul v12.1 v13.1;
  square.1: int = id v14.1;
  v15.1: int = id square.1;
  ret v15.1;
}

@main(n: int) {
.ENTRY:
.main_bb0:
  v0.1: int = id n;
  sum.1: int = call @sumOfSquares v0.1;
  sum.2: int = id sum.1;
  v1.1: int = id n;
  square.1: int = call @squareOfSum v1.1;
  square.2: int = id square.1;
  v2.1: int = id square.2;
  v3.1: int = id sum.2;
  v4.1: int = sub v2.1 v3.1;
  diff.1: int = id v4.1;
  v5.1: int = id diff.1;
  print v5.1;
  v6.1: int = const 0;
  v7.1: int = id diff.1;
}

