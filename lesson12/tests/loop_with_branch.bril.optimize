@main {
  one: int = const 1;
  bound: int = const 100;
  sum: int = const 0;
  i: int = const 0;
  mod: int = const 3;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  commit;
  speculate;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  sum: int = add sum i;
  i: int = add i one;
  cond: bool = lt i bound;
  guard cond .header;
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  guard m3 .header;
  i: int = add i one;
  commit;
.header:
  cond: bool = lt i bound;
  br cond .body .exit;
.body:
  i1: int = div i mod;
  i2: int = mul i1 mod;
  m3: bool = eq i2 i;
  br m3 .if .else;
.if:
  jmp .endif;
.else:
  sum: int = add sum i;
.endif:
  i: int = add i one;
  jmp .header;
.exit:
  print sum;
}
