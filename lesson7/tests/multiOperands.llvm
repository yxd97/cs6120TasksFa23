; ModuleID = 'tests/multiOperands.c'
source_filename = "tests/multiOperands.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [19 x i8] c"%d x %d x %d = %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"%d x %d x %d x %d x %d x %d = %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 0, ptr %3, align 4
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  %13 = load i32, ptr %4, align 4
  %14 = icmp slt i32 %13, 3
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i32 1, ptr %3, align 4
  br label %66

16:                                               ; preds = %2
  %17 = load ptr, ptr %5, align 8
  %18 = getelementptr inbounds ptr, ptr %17, i64 1
  %19 = load ptr, ptr %18, align 8
  %20 = call i32 @atoi(ptr noundef %19) #3
  store i32 %20, ptr %6, align 4
  %21 = load ptr, ptr %5, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 2
  %23 = load ptr, ptr %22, align 8
  %24 = call i32 @atoi(ptr noundef %23) #3
  store i32 %24, ptr %7, align 4
  %25 = load i32, ptr %6, align 4
  %26 = mul nsw i32 -3, %25
  %27 = load i32, ptr %7, align 4
  %28 = mul nsw i32 %26, %27
  store i32 %28, ptr %8, align 4
  %29 = load i32, ptr %6, align 4
  %30 = load i32, ptr %7, align 4
  %31 = load i32, ptr %8, align 4
  %32 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef -3, i32 noundef %29, i32 noundef %30, i32 noundef %31)
  %33 = load i32, ptr %6, align 4
  %34 = mul nsw i32 1233, %33
  %35 = mul nsw i32 %34, -233
  store i32 %35, ptr %9, align 4
  %36 = load i32, ptr %6, align 4
  %37 = load i32, ptr %9, align 4
  %38 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef 1233, i32 noundef %36, i32 noundef -233, i32 noundef %37)
  %39 = load i32, ptr %6, align 4
  %40 = mul nsw i32 %39, 213
  %41 = load i32, ptr %7, align 4
  %42 = mul nsw i32 %40, %41
  store i32 %42, ptr %10, align 4
  %43 = load i32, ptr %6, align 4
  %44 = load i32, ptr %7, align 4
  %45 = load i32, ptr %10, align 4
  %46 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %43, i32 noundef 213, i32 noundef %44, i32 noundef %45)
  %47 = load i32, ptr %7, align 4
  %48 = mul nsw i32 %47, -214
  %49 = mul nsw i32 %48, -9
  store i32 %49, ptr %11, align 4
  %50 = load i32, ptr %7, align 4
  %51 = load i32, ptr %11, align 4
  %52 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %50, i32 noundef -214, i32 noundef -9, i32 noundef %51)
  %53 = load i32, ptr %6, align 4
  %54 = mul nsw i32 %53, 134
  %55 = load i32, ptr %7, align 4
  %56 = mul nsw i32 %54, %55
  %57 = mul nsw i32 %56, 2
  %58 = load i32, ptr %6, align 4
  %59 = mul nsw i32 %57, %58
  %60 = mul nsw i32 %59, -3
  store i32 %60, ptr %12, align 4
  %61 = load i32, ptr %6, align 4
  %62 = load i32, ptr %7, align 4
  %63 = load i32, ptr %6, align 4
  %64 = load i32, ptr %12, align 4
  %65 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, i32 noundef %61, i32 noundef 134, i32 noundef %62, i32 noundef 2, i32 noundef %63, i32 noundef -3, i32 noundef %64)
  store i32 0, ptr %3, align 4
  br label %66

66:                                               ; preds = %16, %15
  %67 = load i32, ptr %3, align 4
  ret i32 %67
}

; Function Attrs: nounwind willreturn memory(read)
declare i32 @atoi(ptr noundef) #1

declare i32 @printf(ptr noundef, ...) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind willreturn memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 17.0.2 (++20230929073225+098e653a5bed-1~exp1~20230929073241.48)"}
