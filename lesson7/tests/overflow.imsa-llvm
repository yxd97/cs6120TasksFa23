; ModuleID = 'tests/overflow.c'
source_filename = "tests/overflow.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [14 x i8] c"%d x %d = %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 0, ptr %3, align 4
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  %12 = load i32, ptr %4, align 4
  %13 = icmp slt i32 %12, 2
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  store i32 1, ptr %3, align 4
  br label %133

15:                                               ; preds = %2
  %16 = load ptr, ptr %5, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 1
  %18 = load ptr, ptr %17, align 8
  %19 = call i32 @atoi(ptr noundef %18) #3
  store i32 %19, ptr %6, align 4
  %20 = load i32, ptr %6, align 4
  %21 = mul nsw i32 %20, -1234986295
  %22 = shl i32 %20, 0
  %23 = add i32 0, %22
  %24 = shl i32 %20, 3
  %25 = add i32 %23, %24
  %26 = shl i32 %20, 6
  %27 = add i32 %25, %26
  %28 = shl i32 %20, 7
  %29 = add i32 %27, %28
  %30 = shl i32 %20, 9
  %31 = add i32 %29, %30
  %32 = shl i32 %20, 11
  %33 = add i32 %31, %32
  %34 = shl i32 %20, 12
  %35 = add i32 %33, %34
  %36 = shl i32 %20, 15
  %37 = add i32 %35, %36
  %38 = shl i32 %20, 16
  %39 = add i32 %37, %38
  %40 = shl i32 %20, 17
  %41 = add i32 %39, %40
  %42 = shl i32 %20, 21
  %43 = add i32 %41, %42
  %44 = shl i32 %20, 22
  %45 = add i32 %43, %44
  %46 = shl i32 %20, 25
  %47 = add i32 %45, %46
  %48 = shl i32 %20, 26
  %49 = add i32 %47, %48
  %50 = shl i32 %20, 28
  %51 = add i32 %49, %50
  %52 = shl i32 %20, 29
  %53 = add i32 %51, %52
  %54 = shl i32 %20, 31
  %55 = add i32 %53, %54
  store i32 %55, ptr %7, align 4
  %56 = load i32, ptr %6, align 4
  %57 = load i32, ptr %7, align 4
  %58 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %56, i32 noundef -1234986295, i32 noundef %57)
  %59 = load i32, ptr %6, align 4
  %60 = mul nsw i32 %59, 363563234
  %61 = shl i32 %59, 1
  %62 = add i32 0, %61
  %63 = shl i32 %59, 5
  %64 = add i32 %62, %63
  %65 = shl i32 %59, 6
  %66 = add i32 %64, %65
  %67 = shl i32 %59, 7
  %68 = add i32 %66, %67
  %69 = shl i32 %59, 11
  %70 = add i32 %68, %69
  %71 = shl i32 %59, 15
  %72 = add i32 %70, %71
  %73 = shl i32 %59, 16
  %74 = add i32 %72, %73
  %75 = shl i32 %59, 17
  %76 = add i32 %74, %75
  %77 = shl i32 %59, 19
  %78 = add i32 %76, %77
  %79 = shl i32 %59, 21
  %80 = add i32 %78, %79
  %81 = shl i32 %59, 23
  %82 = add i32 %80, %81
  %83 = shl i32 %59, 24
  %84 = add i32 %82, %83
  %85 = shl i32 %59, 26
  %86 = add i32 %84, %85
  %87 = shl i32 %59, 28
  %88 = add i32 %86, %87
  store i32 %88, ptr %8, align 4
  %89 = load i32, ptr %6, align 4
  %90 = load i32, ptr %8, align 4
  %91 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %89, i32 noundef 363563234, i32 noundef %90)
  %92 = load i32, ptr %6, align 4
  %93 = mul nsw i32 %92, -1000000000
  %94 = shl i32 %92, 9
  %95 = add i32 0, %94
  %96 = shl i32 %92, 10
  %97 = add i32 %95, %96
  %98 = shl i32 %92, 12
  %99 = add i32 %97, %98
  %100 = shl i32 %92, 13
  %101 = add i32 %99, %100
  %102 = shl i32 %92, 16
  %103 = add i32 %101, %102
  %104 = shl i32 %92, 18
  %105 = add i32 %103, %104
  %106 = shl i32 %92, 21
  %107 = add i32 %105, %106
  %108 = shl i32 %92, 22
  %109 = add i32 %107, %108
  %110 = shl i32 %92, 26
  %111 = add i32 %109, %110
  %112 = shl i32 %92, 30
  %113 = add i32 %111, %112
  %114 = shl i32 %92, 31
  %115 = add i32 %113, %114
  store i32 %115, ptr %9, align 4
  %116 = load i32, ptr %6, align 4
  %117 = load i32, ptr %9, align 4
  %118 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %116, i32 noundef -1000000000, i32 noundef %117)
  %119 = load i32, ptr %6, align 4
  %120 = mul nsw i32 %119, 1073741824
  %121 = shl i32 %119, 30
  %122 = add i32 0, %121
  store i32 %122, ptr %10, align 4
  %123 = load i32, ptr %6, align 4
  %124 = load i32, ptr %10, align 4
  %125 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %123, i32 noundef 1073741824, i32 noundef %124)
  %126 = load i32, ptr %6, align 4
  %127 = mul nsw i32 %126, -2147483648
  %128 = shl i32 %126, 31
  %129 = add i32 0, %128
  store i32 %129, ptr %11, align 4
  %130 = load i32, ptr %6, align 4
  %131 = load i32, ptr %11, align 4
  %132 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %130, i32 noundef -2147483648, i32 noundef %131)
  store i32 0, ptr %3, align 4
  br label %133

133:                                              ; preds = %15, %14
  %134 = load i32, ptr %3, align 4
  ret i32 %134
}

; Function Attrs: nounwind willreturn memory(read)
declare i32 @atoi(ptr noundef) #1

declare i32 @printf(ptr noundef, ...) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind willreturn memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 17.0.2 (++20230929073225+098e653a5bed-1~exp1~20230929073241.48)"}
