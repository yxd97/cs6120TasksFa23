; ModuleID = 'tests/negative.c'
source_filename = "tests/negative.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [14 x i8] c"%d x %d = %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 0, ptr %3, align 4
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  %12 = load i32, ptr %4, align 4
  %13 = icmp slt i32 %12, 2
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  store i32 1, ptr %3, align 4
  br label %45

15:                                               ; preds = %2
  %16 = load ptr, ptr %5, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 1
  %18 = load ptr, ptr %17, align 8
  %19 = call i32 @atoi(ptr noundef %18) #3
  store i32 %19, ptr %6, align 4
  %20 = load i32, ptr %6, align 4
  %21 = mul nsw i32 %20, -3
  store i32 %21, ptr %7, align 4
  %22 = load i32, ptr %6, align 4
  %23 = load i32, ptr %7, align 4
  %24 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %22, i32 noundef -3, i32 noundef %23)
  %25 = load i32, ptr %6, align 4
  %26 = mul nsw i32 %25, -245
  store i32 %26, ptr %8, align 4
  %27 = load i32, ptr %6, align 4
  %28 = load i32, ptr %8, align 4
  %29 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %27, i32 noundef -245, i32 noundef %28)
  %30 = load i32, ptr %6, align 4
  %31 = mul nsw i32 %30, -63
  store i32 %31, ptr %9, align 4
  %32 = load i32, ptr %6, align 4
  %33 = load i32, ptr %9, align 4
  %34 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %32, i32 noundef -63, i32 noundef %33)
  %35 = load i32, ptr %6, align 4
  %36 = mul nsw i32 %35, -1
  store i32 %36, ptr %10, align 4
  %37 = load i32, ptr %6, align 4
  %38 = load i32, ptr %10, align 4
  %39 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %37, i32 noundef -1, i32 noundef %38)
  %40 = load i32, ptr %6, align 4
  %41 = mul nsw i32 %40, -43958
  store i32 %41, ptr %11, align 4
  %42 = load i32, ptr %6, align 4
  %43 = load i32, ptr %11, align 4
  %44 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %42, i32 noundef -43958, i32 noundef %43)
  store i32 0, ptr %3, align 4
  br label %45

45:                                               ; preds = %15, %14
  %46 = load i32, ptr %3, align 4
  ret i32 %46
}

; Function Attrs: nounwind willreturn memory(read)
declare i32 @atoi(ptr noundef) #1

declare i32 @printf(ptr noundef, ...) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind willreturn memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 17.0.2 (++20230929073225+098e653a5bed-1~exp1~20230929073241.48)"}
